#!/usr/bin/perl

use 5.010;
use Switch;
use File::ReadBackwards;
use LWP::UserAgent;
use HTTP::Request;
use HTTP::Response;

=pod
=cut


&check_env;
if($APISLA_HOME){
	&init;
	&read_config;
	&read_log;
	&analysis_container_log;
	&handle_log;
	&save_slalog;
	&send_result;
	&release_resource;
}

#检查ENV
sub check_env{
	$APISLA_HOME = $ENV{"APISLA_HOME"};
	if(!$APISLA_HOME ){
		say "please set APISLA_HOME ";
	}
	#$APISLA_HOME = "/home/ltian/work/opensource/perl/data";
	say "APISLA_HOME : $APISLA_HOME";
}

#INIT
sub init{
	$start =  time();
	$now=localtime( $start );


	($sec,$min,$hour,$day,$mon,$year,$wday,$yday,$isdst)=localtime( $start );
	
	($week,$mon,$day,$ht,$year)=split(" ",$now);
	@months{qw(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)}=split(",","01,02,03,04,05,06,07,08,09,10,11,12");
	$mon=$months{$mon};
	$current_time = $year ."-".$mon ."-".$day .".".$hour;
	say "current_time ".$current_time;
	
}

#解析CONFIG
sub read_config{
	
	$properties_file = $APISLA_HOME."/apisla.properties";
	$apis_file = $APISLA_HOME."/apis.txt"; 
	$curosr_log_file = $APISLA_HOME."/apisla.log";
	
	&init_logfiles;	
	&init_apis;	
	
}

sub init_logfiles{
	@slalog = &get_slalog;
	$timestamp = $slalog[1];
	chomp($timestamp);
	say "timestamp ".$timestamp;
	
	open(PROPS,"<",$properties_file) || die "cannot open the file: \n";
	my @props=<PROPS>;
	chomp($props[0]);
	chomp($props[1]);
	
	$container_log_path    = $props[0];
	$application_log_path  = $props[1];

	#$container_log_path    = "/home/ltian/work/opensource/perl/data";
	$container_log_file = $container_log_path ."/access_log.".$timestamp.".txt";
	say "container_log_file :".$container_log_file;
	$application_log_file = $application_log_path."/dailylog.log";
}

sub init_apis{
	#$APIS = "\/queryprodstock|\/queryprodstock2|\/queryprodstock3";
	$APIS = "\/promo\/find_history_min_promo_price"
		."|\/promo\/find_promo_base_by_ids"
		."|\/activity_query.php"
		."|\/productapi\/find_product_promo"
		."|\/productapi\/find_product_promo_lighter"
		."|\/productapi\/find_product_price"
		."|\/promo\/find_promo_product_list"
		."|\/productapi\/find_promo_collection"
		."|\/productapi\/shop_promo_product_except"
		."|\/productapi\/find_promo_setting"
		."|\/promo\/find_promo_list_by_product_id_and_period"
		."|\/productapi\/find_promo_shop";
}

#读日志文件
sub read_log{
	$cursor = $slalog[0];
	$linecount = `cat $container_log_file | wc -l `;

	$read_step = $linecount - $cursor;
	print "linecount : " , $linecount , "cursor : " , $cursor , "read_step : " , $read_step ,"\n";
	tie *FILE, 'File::ReadBackwards', $container_log_file or die "can't read 'log_file' $!" ;
}

#解析容器日志文件
sub analysis_container_log{
	
	$index_r = 0;
	while(<FILE>){
		$index_r++;
		if($index_r <= $read_step){
			if( $_  =~ /$APIS/){
				my @fields = split;
				#print $fields[0]," ",$fields[1]," ",$fields[2]."\n";
				&cal_sla($fields[1],$fields[2]);
				$result{$fields[1]}{"total"} += 1
			}
		}
	}
}

#具体的计算逻辑
sub cal_sla{
	my($url,$time) = @_;
	switch($time){
		case [0..10]       { $result{$url}{"ms10"} += 1 }
		case [11..20]      { $result{$url}{"ms20"} += 1 }
		case [21..30]      { $result{$url}{"ms30"} += 1}
		case [31..40]      { $result{$url}{"ms40"} += 1 }
		case [41..50]      { $result{$url}{"ms50"} += 1 }
		case [51..60]      { $result{$url}{"ms60"} += 1 }
		case [61..70]      { $result{$url}{"ms70"} += 1 }
		case [71..80]      { $result{$url}{"ms80"} += 1 }
		case [81..90]      { $result{$url}{"ms90"} += 1 }
		case [91..100]     { $result{$url}{"ms100"} += 1 }
		case [101..150]    { $result{$url}{"ms150"} += 1 }
		case [151..200]    { $result{$url}{"ms200"} += 1 }
		case [201..300]    { $result{$url}{"ms300"} += 1 }
		case [301..400]    { $result{$url}{"ms400"} += 1 }
		case [401..500]    { $result{$url}{"ms500"} += 1 }
		case [501..1000]   { $result{$url}{"s1"} += 1 }
		case [1001..2000]  { $result{$url}{"s2"} += 1 }
		case [2001..3000]  { $result{$url}{"s3"} += 1 }
		case [3001..4000]  { $result{$url}{"s4"} += 1 }
		case [4001..5000]  { $result{$url}{"s5"} += 1 }
		case [5001..10000] { $result{$url}{"s10"} += 1 }
		else               { $result{$url}{"s10plus"} += 1 }
	}
	
}

#解析程序日志文件
sub analysis_log2{
	my $what = "queryprodstock2|queryprodstock3";

	while(<FILE>){
		if( $_  =~ /$what/){
			#print $_;
			my @fields = split;
		        #foreach( @fields){say;}
			say $fields[0];
			say $fields[1];
			say $fields[2];
		}
	}
}

#处理结果格式
sub handle_log{
	
	$json= '{ "apisla" : [ ';	

	foreach my $key1 (keys %result){
		my $hash2 = $result{$key1};
		
		my $json_ = '{"apiurl" : '.'"'."$key1".'",';
		my $json_1 = '';
		foreach my $key2 ( keys %$hash2){
			my $json_2 = '"'.$key2.'"'.' : '.'"'.$hash2->{$key2}.'",';
			$json_1 = $json_1.$json_2;
		}
		$json_1 = substr($json_1,0,rindex($json_1,","));
		$json_ = $json_ . $json_1 . ' },';
		$json  = $json . $json_ ;
	}
	$json = substr($json,0,rindex($json,","));
	$json  = $json . ' ] }';

	print "".$json . "\n";
	
}

#发送
sub send_result{
 	my $ua = LWP::UserAgent->new;
 
	my $server_endpoint = "http://192.168.134.208:8080/logtest/apisla";
	my $resp = $ua->post($server_endpoint,{'sla'=> $json });
	if ($resp->is_success) {
	    my $message = $resp->decoded_content;
	    print "Received reply: $message\n";
	}
	else {
	    print "HTTP POST error code: ", $resp->code, "\n";
	    print "HTTP POST error message: ", $resp->message, "\n";
	}
	print "\n";
}

#得到上一次截至行的游标
sub get_slalog{
	open(CURSOR,"<",$curosr_log_file) || die "cannot open the file: \n";
	my @linelist=<CURSOR>;
	return @linelist;
}

#保存本次最后一行的行号到游标
sub save_slalog{
	open CURSOR_OUT , ">" ,$curosr_log_file;
	if( $current_time eq $timestamp ){
		print CURSOR_OUT $linecount;
		print CURSOR_OUT $timestamp;
	}else{
		print CURSOR_OUT "0\n";
		print CURSOR_OUT $current_time;
	}
	
}

sub release_resource{
	close CURSOR;
	close CURSOR_OUT;
	close FILE;
	$end = time();
	print 'cost time : '.($end-$start)," s\n";
	
}


